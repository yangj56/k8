important docs
for declarative method
https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/

for imperative method
https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#-strong-getting-started-strong-

sample yamls
https://kubernetes.io/docs/concepts/storage/persistent-volumes/

https://kubernetes.io/docs/reference/kubectl/cheatsheet/

.bashrc
source <(kubectl completion bash) # set up autocomplete in bash into the current shell, bash-completion package should be installed first.
echo "source <(kubectl completion bash)" >> ~/.bashrc # add autocomplete permanently to your bash shell.
alias k=kubectl
complete -o default -F __start_kubectl k

"export dro="--dry-run=client -o yaml""
"export tmp="--image=nginx:alpine --restart=Never --rm -i -- curl -m 5""

k -n ss run tmp2 $tmp url

.vimrc
set tabstop=2 shiftwidth=2 expandtab # use 2 spaces instead of tab

k config set-context --current --namespace=core-banking

k get something --no-headers | wc -l

k delete --grace-period=0 --force

k apply -f .yaml
k create -f .yaml

always check all namespaces
k get pod --all-namespaces

create pod yaml using dryrun
k run pod-name --image=nginx:alpine --dry-run=client -oyaml > logger.yaml
k create deployment ...

edit existing pod  
k get pod pod-name -n namespace -oyaml > xx.yaml

k exec -it pod-name -- sh (to test connections)
 -> ping another pod by
    nc -v -z -w 2 podname 80

get clusterIP
k -n mars get pod -o wide # to get the cluster IP

k -n mars get all

temp container to query or curl 
k -n mars run tmp --restart=Never --rm -i --image=nginx:alpine -- curl -m 5 manager-api-svc:4444 (clusterIP)
k -n mars run tmp --restart=Never --rm -i --image=nginx:alpine -- curl -m 5 10.0.1.14 (pod ip)

k -n jupiter edit service jupiter-crew-svc

# get pod with a specific label
k -n sun get pod -l type=runner # only pods with label runner

helm
show all including pending ones
helm -n mercury ls -a

labels
k -n sun get pod --show-labels

k -n moon get pod -o wide # get pod cluster IPs

deploy
k -n moon rollout restart deploy web-moon

initContainer
tmp/nameofthevolume

service selector is for pods not deployment
service port is the one we should curl

get all nodes ip address
k get nodes -o wide